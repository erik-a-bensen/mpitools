name: Update Documentation
on:
  push:
    branches: [main]
    # paths: ['**/*.py']

permissions:
  contents: write

jobs:
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install MPI
        run: |
          sudo apt-get update
          sudo apt-get install -y libopenmpi-dev openmpi-bin
          
      - name: Install dependencies
        run: |
          pip install pydoc-markdown
          pip install -e .
          
      - name: Debug - Test imports
        run: |
          python -c "
          import sys
          sys.path.insert(0, 'src')
          import mpitools
          print('=== Testing function imports ===')
          for name in ['setup_mpi', 'abort_on_error']:
              func = getattr(mpitools, name)
              print(f'{name}:')
              print(f'  Type: {type(func)}')
              print(f'  Has docstring: {bool(func.__doc__)}')
              if func.__doc__:
                  print(f'  Docstring length: {len(func.__doc__)}')
          "

      - name: Debug - What's in the mpitools module?
        run: |
          python -c "
          import sys
          sys.path.insert(0, 'src')
          import mpitools
          import inspect
          print('=== Module contents ===')
          print('dir(mpitools):', [x for x in dir(mpitools) if not x.startswith('_')])
          print()
          print('=== Functions with docstrings ===')
          for name in dir(mpitools):
              if not name.startswith('_'):
                  obj = getattr(mpitools, name)
                  if callable(obj) and hasattr(obj, '__doc__') and obj.__doc__:
                      print(f'{name}: {type(obj).__name__} - docstring length: {len(obj.__doc__)}')
          "
          
      - name: Update README with API docs
        run: |
          sed -i '/^## API Reference/,$d' README.md
          echo "" >> README.md
          echo "## API Reference" >> README.md
          echo "" >> README.md
          pydoc-markdown >> README.md
          
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git diff --staged --quiet || git commit -m "Auto-update README with API docs [skip ci]"
          git push